. ../../testutils.sh

basicTest Interpretation.idr << EOF
    SomeCtx
    anonCtx 4

    map (Prelude.(*) 2) intEnv

    get intEnv (There (There Here))
    get intEnv Here

    replace intEnv Here 4

    constEnv {ctx = SomeCtx} 0
    indEnv {ctx = SomeCtx} 0 1 $ There (There Here)
    indEnv {ctx = SomeCtx} 0 1 $ There Here
    indEnv {ctx = SomeCtx} 0 1 $ Here

    intFun intEnv
    curry intFun 2 4 6

    stringFun "Lorem ipsum, " "dolor " "sit amet"
    uncurry {b = const String} stringFun stringEnv

    the Integer $ impl {syn = MonoidSyn} \`(e)
    the Integer $ impl {syn = MonoidSyn} \`((*)) 1 4

    the String $ impl {syn = MonoidSyn} \`(e)
    the String $ impl {syn = MonoidSyn} \`((*)) "x" "y"

    the Integer e
    the Integer $ Main.(*) 2 6

    the String e
    the String $ "a" * "b"
EOF

basicTest All.idr << EOF
    someEnvGTZero

    extendedVarsCovers
EOF
